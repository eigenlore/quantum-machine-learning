\relax 
\providecommand\babel@aux[2]{}
\@nameuse{bbl@beforestart}
\babel@aux{english}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}Classical machine learning}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}General overview}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Support vector machine}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Linear SVM}{3}{}\protected@file@percent }
\newlabel{margin definition}{{1}{4}{}{}{}}
\newlabel{constraint hard margin}{{5}{5}{}{}{}}
\newlabel{alpha def}{{6}{5}{}{}{}}
\newlabel{dual problem SVM}{{7}{5}{}{}{}}
\newlabel{decision boundary svm}{{11}{6}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces SVM decision boundary and margin border, fitted on a 2 feature mock dataset of 200 instances.}}{7}{}\protected@file@percent }
\newlabel{fig:classical svm mock}{{1}{7}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}Kernel SVM}{8}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Higly non-linear 2 feature mock dataset with 200 instances.}}{8}{}\protected@file@percent }
\newlabel{fig:classical svm circles}{{2}{8}{}{}{}}
\newlabel{kernel max}{{16}{9}{}{}{}}
\newlabel{kernel prodiction}{{17}{9}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Highly non-linear mock dataset in the feature space after the application of the feature map $\phi $. We observe now that the dataset is linearly separable.}}{10}{}\protected@file@percent }
\newlabel{fig:classical svm circle 3d}{{3}{10}{}{}{}}
\newlabel{kernel max K}{{19}{11}{}{}{}}
\newlabel{kernel prodiction K}{{20}{11}{}{}{}}
\newlabel{polykernel ex}{{21}{11}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Highly non-linear mock dataset decision boundary, fitted with a SVM using kernel of eq. (\ref {polykernel ex}). The white and black areas are the two predicted classes. We observe how, using the kernel, we obtained a non-linear decision boundary.}}{13}{}\protected@file@percent }
\newlabel{fig:classical svm circle decision boundary}{{4}{13}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Quantum machine learning}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Quantum Support Vector Machine}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}Quantum feature map and Quantum Kernels}{14}{}\protected@file@percent }
\newlabel{circuit}{{26}{15}{}{}{}}
\newlabel{frequency}{{27}{16}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}Quantum encoding circuits}{16}{}\protected@file@percent }
\newlabel{ZZ}{{37}{19}{}{}{}}
\newlabel{coeff Z}{{39}{20}{}{}{}}
\newlabel{coeff ZZ1}{{42}{20}{}{}{}}
\newlabel{coeff ZZ2}{{43}{20}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Z feature map, with 2 qubits and 2 features, decomposed in terms of elementary gates. The gate $P$ is defined as $P(\phi ) = (1,0; 0, e^{i\phi })$. We observe how the circuit is parametrized by the coefficients of eq. (\ref {coeff Z}).}}{21}{}\protected@file@percent }
\newlabel{fig:Z}{{5}{21}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces ZZ feature map, with 2 qubits and 2 features, decomposed in terms of elementary gates. The gate $P$ is defined as $P(\phi ) = (1,0; 0, e^{i\phi })$. We observe how the circuit is parametrized by the coefficients of eq. (\ref {coeff ZZ1}) and (\ref {coeff ZZ2}).}}{21}{}\protected@file@percent }
\newlabel{fig:ZZ}{{6}{21}{}{}{}}
\newlabel{pauli}{{45}{22}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Pauli feature map, with 2 qubits and 2 features, decomposed in term of elementary gates, constructed with Y and YZ interactions.}}{22}{}\protected@file@percent }
\newlabel{fig:Pauli}{{7}{22}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.3}QSVM algorithm and Qiskit implementation}{23}{}\protected@file@percent }
\newlabel{circuit item }{{46}{24}{}{}{}}
\newlabel{loss function}{{48}{24}{}{}{}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Quantum Support Vector Machine (QSVM)}}{25}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.4}QSVM potential}{26}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces QSVM decision boundary with ZFeatureMap, fitted on a 2 feature mock dataset of 200 instances.}}{27}{}\protected@file@percent }
\newlabel{fig:qsvm}{{8}{27}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Artificial ad hoc dataset, generated with $\Delta =0.3$. This dataset, by construction, is easily separable by ZZFeatureMap.}}{29}{}\protected@file@percent }
\newlabel{fig:adhoc}{{9}{29}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.5}Issues of QSVM (mancano delle immagini)}{29}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Result of the classical fit with RBF kernel on the artificial dataset. We observe how the SVM could not find the correct separation between the classes. }}{30}{}\protected@file@percent }
\newlabel{fig:adhocrbf}{{10}{30}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Result of the quantum fit on the artificial dataset, with ZZFeatureMap. We observe how the QSVM found the correct separation between the classes.}}{31}{}\protected@file@percent }
\newlabel{fig:adhoczz}{{11}{31}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Quantum kernel alignment}{32}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}Circuit optimization}{32}{}\protected@file@percent }
\newlabel{qka}{{52}{33}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Parametrized quantum circuit, with two rotation inserted before a ZZFeatureMap.}}{36}{}\protected@file@percent }
\newlabel{fig:param rotation}{{12}{36}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Parametrized quantum circuit, with a ZZFeatureMap inserted before another ZZFeatureMap. The former has the parameters $\lambda $ for Quantum Kernel Alignment, while the latter has the parameters $\mathbf  {x}$ in order to encode the classical instance.}}{36}{}\protected@file@percent }
\newlabel{fig:ZZafterZZ}{{13}{36}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.2}Performance}{37}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Genetic algorithms}{37}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Result of the fit of circular dataset using QKA-QSVM. An accuracy of 50\% is achieved.}}{38}{}\protected@file@percent }
\newlabel{fig:qka}{{14}{38}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces On the left convergence of the loss function during the QKA training. On the right the final trained kernel matrix.}}{39}{}\protected@file@percent }
\newlabel{fig:loss function}{{15}{39}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.1}General introduction}{39}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.2}Genetic algorithm for QSVM}{40}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Example of the phenotype of an individual. The phenotype is a quantum circuit.}}{43}{}\protected@file@percent }
\newlabel{fig:fenotip}{{16}{43}{}{}{}}
\gdef \@abspage@last{43}
